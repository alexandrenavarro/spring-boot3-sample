<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      https://docs.oracle.com/javase/specs/jls/se11/html/index.html

    - the Sun Code Conventions at https://www.oracle.com/java/technologies/javase/codeconventions-contents.html

    - the Javadoc guidelines at
      https://www.oracle.com/technical-resources/articles/java/javadoc-tool.html

    - the JDK Api documentation https://docs.oracle.com/en/java/javase/11/

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  https://checkstyle.org (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.
  To suppress certain violations please review suppression filters.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">
    <!--
        If you set the basedir property below, then all reported file
        names will be relative to the specified directory. See
        https://checkstyle.org/config.html#Checker

        <property name="basedir" value="${basedir}"/>
    -->
    <property name="severity" value="error"/>

    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Excludes all 'module-info.java' files              -->
    <!-- See https://checkstyle.org/config_filefilters.html -->
<!--    <module name="BeforeExecutionExclusionFileFilter">-->
<!--        <property name="fileNamePattern" value="module\-info\.java$"/>-->
<!--    </module>-->

    <!-- https://checkstyle.org/config_filters.html#SuppressionFilter -->
    <module name="SuppressionFilter">
        <property name="file" value="${org.checkstyle.sun.suppressionfilter.config}"
                  default="checkstyle-suppressions.xml" />
        <property name="optional" value="true"/>
    </module>

    <!-- Checks that a package-info.java file exists for each package.     -->
    <!-- See https://checkstyle.org/config_javadoc.html#JavadocPackage -->
<!--    <module name="JavadocPackage"/>-->

    <!-- Checks whether files end with a new line.                        -->
    <!-- See https://checkstyle.org/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/> <!-- managed by activeRecipe("org.openrewrite.java.format.EmptyNewlineAtEndOfFile")  -->

    <!-- Checks that property files contain the same keys.         -->
    <!-- See https://checkstyle.org/config_misc.html#Translation -->
    <module name="Translation"/>

    <!-- Checks for Size Violations.                    -->
    <!-- See https://checkstyle.org/config_sizes.html -->
<!--    <module name="FileLength"/>-->
<!--    <module name="LineLength">-->
<!--        <property name="fileExtensions" value="java"/>-->
<!--    </module>-->

    <!-- Checks for whitespace                               -->
    <!-- See https://checkstyle.org/config_whitespace.html -->
    <module name="FileTabCharacter"/>  <!-- managed by activeRecipe("org.openrewrite.java.format.NormalizeTabsOrSpaces") -->

    <!-- Miscellaneous other checks.                   -->
    <!-- See https://checkstyle.org/config_misc.html -->
    <module name="RegexpSingleline">  <!-- managed by activeRecipe("org.openrewrite.java.format.RemoveTrailingWhitespace") -->
        <property name="format" value="\s+$"/>
        <property name="minimum" value="0"/>
        <property name="maximum" value="0"/>
        <property name="message" value="Line has trailing spaces."/>
    </module>

    <!-- Checks for Headers                                -->
    <!-- See https://checkstyle.org/config_header.html   -->
    <!-- <module name="Header"> -->
    <!--   <property name="headerFile" value="${checkstyle.header.file}"/> -->
    <!--   <property name="fileExtensions" value="java"/> -->
    <!-- </module> -->

    <module name="TreeWalker">

        <!-- Checks for Javadoc comments.                     -->
        <!-- See https://checkstyle.org/config_javadoc.html -->
<!--        <module name="InvalidJavadocPosition"/>-->
<!--        <module name="JavadocMethod"/>-->
<!--        <module name="JavadocType"/>-->
<!--        <module name="JavadocVariable"/>-->
<!--        <module name="JavadocStyle"/>-->
<!--        <module name="MissingJavadocMethod"/>-->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See https://checkstyle.org/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.RenameLocalVariablesToCamelCase")  -->
        <module name="LocalVariableName"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.RenameLocalVariablesToCamelCase")  -->
        <module name="MemberName"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.RenamePrivateFieldsToCamelCase")  -->
        <module name="MethodName"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.MethodNameCasing")  -->
        <module name="PackageName"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.LowercasePackage")  -->
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for imports                              -->
        <!-- See https://checkstyle.org/config_imports.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"> <!-- managed by activeRecipe("org.openrewrite.java.RemoveUnusedImports")  -->
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See https://checkstyle.org/config_sizes.html -->
        <module name="MethodLength"/>
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See https://checkstyle.org/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.PadEmptyForLoopComponents")  -->
        <module name="GenericWhitespace"/> <!-- managed by activeRecipe("org.openrewrite.java.format.Spaces")  -->
        <module name="MethodParamPad"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.MethodParamPad")  -->
        <module name="NoWhitespaceAfter"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.NoWhitespaceAfter")  -->
        <module name="NoWhitespaceBefore"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.NoWhitespaceBefore")  -->
        <module name="OperatorWrap"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.OperatorWrap")  -->
        <module name="ParenPad"/> <!-- managed by activeRecipe("org.openrewrite.java.format.Spaces")  -->
        <module name="TypecastParenPad"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.TypecastParenPad")  -->
        <module name="WhitespaceAfter"/> <!-- managed by activeRecipe("org.openrewrite.java.format.Spaces")  -->
        <module name="WhitespaceAround"/> <!-- managed by activeRecipe("org.openrewrite.java.format.Spaces")  -->



        <!-- Modifier Checks                                    -->
        <!-- See https://checkstyle.org/config_modifier.html -->
        <module name="ModifierOrder"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.ModifierOrder")  -->
        <module name="RedundantModifier"/>

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See https://checkstyle.org/config_blocks.html -->
        <module name="AvoidNestedBlocks"/> <!-- managed by //activeRecipe("org.openrewrite.java.cleanup.RemoveUnneededBlock") -->
        <module name="EmptyBlock"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.EmptyBlock") -->
        <module name="LeftCurly"/>
        <module name="NeedBraces"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.NeedBraces") -->
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See https://checkstyle.org/config_coding.html -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="HiddenField"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.HiddenField") -->
        <module name="IllegalInstantiation"> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.PrimitiveWrapperClassConstructorToValueOf") -->
            <property name="classes" value="java.lang.Boolean, java.lang.Integer"/>
        </module>
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.MinimumSwitchCases") -->
        <module name="MultipleVariableDeclarations"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.MultipleVariableDeclarations") -->
        <module name="SimplifyBooleanExpression"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.SimplifyBooleanExpression") -->
        <module name="SimplifyBooleanReturn"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.SimplifyBooleanReturn") -->

        <module name="AvoidDoubleBraceInitialization"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.NoDoubleBraceInitialization") -->
        <module name="CovariantEquals"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.CovariantEquals") -->
        <module name="DefaultComesLast"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.DefaultComesLast") -->
        <module name="EqualsAvoidNull"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.EqualsAvoidsNull") -->
        <module name="ExplicitInitialization"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.ExplicitInitialization") -->
        <module name="UnnecessaryParentheses"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.UnnecessaryParentheses") -->
        <module name="IllegalType"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.UseCollectionInterfaces") -->
<!--        <module name="UnusedLocalVariable"/> &lt;!&ndash; managed by activeRecipe("org.openrewrite.java.cleanup.RemoveUnusedLocalVariables") &ndash;&gt;-->
        <module name="MultipleStringLiterals"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.ReplaceDuplicateStringLiterals") -->
        <module name="NoFinalizer"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.NoFinalizer") -->
        <module name="StringLiteralEquality"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.StringLiteralEquality") -->
        <module name="FallThrough"/> <!-- managed by activeRecipe("activeRecipe("org.openrewrite.java.cleanup.FallThrough") -->
        <module name="FinalLocalVariable"/> <!-- managed by activeRecipe("activeRecipe("org.openrewrite.java.cleanup.FinalizeLocalVariables") -->


        <!-- Checks for class design                         -->
        <!-- See https://checkstyle.org/config_design.html -->
        <module name="DesignForExtension"/>
        <module name="FinalClass"/> <!-- managed by activeRecipe("org.openrewrite.java.cleanup.FinalClass") -->
<!--        <module name="HideUtilityClassConstructor"/> &lt;!&ndash; managed by activeRecipe("org.openrewrite.java.cleanup.HideUtilityClassConstructor") &ndash;&gt;-->
        <module name="InterfaceIsType"/>
        <module name="VisibilityModifier"/>

        <!-- Miscellaneous other checks.                   -->
        <!-- See https://checkstyle.org/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters"/>  <!-- managed by  activeRecipe("org.openrewrite.java.cleanup.FinalizeMethodArguments")  -->
        <module name="TodoComment"/>
        <module name="UpperEll"/>  <!-- managed by activeRecipe("org.openrewrite.java.cleanup.UpperCaseLiteralSuffixes") -->

        <module name="Indentation"/> <!-- Add to manage indent of 4 spaces-->

        <!-- https://checkstyle.org/config_filters.html#SuppressionXpathFilter -->
        <module name="SuppressionXpathFilter">
            <property name="file" value="${org.checkstyle.sun.suppressionxpathfilter.config}"
                      default="checkstyle-xpath-suppressions.xml" />
            <property name="optional" value="true"/>
        </module>

    </module>

</module>